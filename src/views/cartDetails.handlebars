<div class="container mt-5">
    <h1 class="mb-4 text-primary">üõí Tu Carrito</h1>

    {{#if cart.products.length}}
        <ul class="list-group">
            {{#each cart.products}}
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <div>
                        <strong>{{this.product.title}}</strong> - ${{this.product.price}}  
                        <br>
                        Cantidad: 
                        <button class="btn btn-sm btn-outline-secondary change-qty" data-action="decrease" data-pid="{{this.product._id}}">‚ûñ</button>
                        <span class="mx-2 quantity">{{this.quantity}}</span>
                        <button class="btn btn-sm btn-outline-secondary change-qty" data-action="increase" data-pid="{{this.product._id}}">‚ûï</button>
                    </div>
                    <button class="btn btn-danger btn-sm delete-product" data-pid="{{this.product._id}}">Eliminar</button>
                </li>
            {{/each}}  
        </ul>

            <div class="mb-4 d-flex gap-3">
                <button id="clearCartBtn" class="btn btn-warning">üßπ Vaciar carrito</button>
                <a href="/products" class="btn btn-secondary">‚¨ÖÔ∏è Volver al cat√°logo</a>
                <button id="checkoutBtn" class="btn btn-success">‚úÖ Finalizar compra</button>
            </div>
        
    {{else}}
        <div class="alert alert-warning mt-3" role="alert">
            El carrito est√° vac√≠o.
        </div> 
        <a href="/products" class="btn btn-outline-primary mt-4">üîô Volver a la tienda</a>
    {{/if}}
</div>

<script>
    const cartId = '{{cart._id}}'; 

    // Actualizar cantidad
    document.querySelectorAll('.change-qty').forEach(btn => {
        btn.addEventListener('click', async () => {
            const pid = btn.dataset.pid;
            const action = btn.dataset.action;
            const qtySpan = btn.parentElement.querySelector('.quantity');
            let currentQty = parseInt(qtySpan.textContent);

            let newQty = action === 'increase' ? currentQty + 1 : currentQty - 1;
            if (newQty < 1) return;

            try {
                const res = await fetch(`/api/carts/${cartId}/products/${pid}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ quantity: newQty })
                });

                if (res.ok) {
                    qtySpan.textContent = newQty;
                } else {
                    alert('‚ùå Error al actualizar cantidad');
                }
            } catch (err) {
                alert('‚ùå Error en la petici√≥n');
            }
        });
    });

    // Eliminar producto
    document.querySelectorAll('.delete-product').forEach(button => {
        button.addEventListener('click', async () => {
            const productId = button.dataset.pid;

            const confirmDelete = confirm('¬øQuer√©s eliminar este producto del carrito?');
            if (!confirmDelete) return;

            try {
                const res = await fetch(`/api/carts/${cartId}/products/${productId}`, {
                    method: 'DELETE'
                });

                if (res.ok) {
                    location.reload();
                } else {
                    const err = await res.json();
                    alert('‚ùå Error: ' + err.message);
                }
            } catch (err) {
                alert('‚ùå Error de red al eliminar producto');
            }
        });
    }); 

     // Eliminar todos los productos
    document.getElementById('clearCartBtn').addEventListener('click', async () => {
        const confirmClear = confirm('¬øEst√°s seguro que quer√©s vaciar el carrito?');

        if (!confirmClear) return;

        try {
            const res = await fetch(`/api/carts/${cartId}`, {
                method: 'DELETE'
            });

            if (res.ok) {
                alert('üßπ Carrito vaciado con √©xito');
                location.reload(); 
            } else {
                alert('‚ùå Error al vaciar el carrito');
            }
        } catch (err) {
            alert('‚ùå Error al hacer la petici√≥n');
        }
    }); 
    
    // Finalizar compra (visual)
    document.getElementById('checkoutBtn').addEventListener('click', async () => {
        try {
            const res = await fetch(`/api/carts/${cartId}`, { method: 'DELETE' });
            if (res.ok) {
                alert('Compra finalizada. Gracias por tu pedido!');
                window.location.href = '/products';  
            } else {
                const err = await res.text();
                alert('‚ùå Error al finalizar compra: ' + err);
            }
        } catch (err) {
            alert('‚ùå Error en la petici√≥n para finalizar compra');
        }
    });
</script>
